{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/fullstack-auto/client/src/pages/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentsInputForm from '../components/CommentsInputForm';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index.js';\nimport { getComments, createComments } from '../http/httpHooks';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '5'\n  },\n  comment: {\n    background: '#1C2128',\n    color: 'white',\n    width: '1000px',\n    minHeight: '100px',\n    maxHeight: '400px'\n  }\n}));\nconst CommentsPage = observer(_c = _s(() => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    comment\n  } = useContext(Context);\n  const [name, setName] = useState('');\n  const [textComment, setTextComment] = useState('');\n\n  const getHandleDataClick = (name, commentText) => {\n    setName(name);\n    setTextComment(commentText);\n  };\n\n  const postHandleDataClick = async () => {\n    const response = await createComments(name, textComment);\n    console.log(response);\n  };\n\n  useEffect(() => {\n    getComments().then(data => comment.setComments(data));\n  }, [name, textComment, comment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [comment.comments.length !== 0 && comment.comments.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.text,\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CommentsInputForm, {\n      onSubmit: getHandleDataClick,\n      onClick: postHandleDataClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}, \"iMphQZSwtT6tM+ASJBY/qD4W6Ko=\", false, function () {\n  return [useStyles];\n}));\n_c2 = CommentsPage;\nexport default CommentsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentsPage$observer\");\n$RefreshReg$(_c2, \"CommentsPage\");","map":{"version":3,"sources":["/home/ihor/Рабочий стол/fullstack-auto/client/src/pages/CommentsPage.jsx"],"names":["React","useContext","useEffect","useState","makeStyles","CommentsInputForm","observer","Context","getComments","createComments","Typography","useStyles","theme","root","display","flexDirection","alignItems","marginTop","comment","background","color","width","minHeight","maxHeight","CommentsPage","classes","name","setName","textComment","setTextComment","getHandleDataClick","commentText","postHandleDataClick","response","console","log","then","data","setComments","comments","length","map","item","index","text"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentsInputForm from '../components/CommentsInputForm';\nimport {observer} from 'mobx-react-lite'\nimport {Context} from '../index.js'\nimport {getComments, createComments} from '../http/httpHooks'\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: '5'\n    },\n    comment: {\n        background: '#1C2128',\n        color: 'white', \n        width: '1000px',\n        minHeight: '100px',\n        maxHeight: '400px'\n    },\n}))\n\nconst CommentsPage = observer(() => {\n    const classes = useStyles()\n    const {comment} = useContext(Context)\n    const [name, setName] = useState('')\n    const [textComment, setTextComment] = useState('')\n\n    const getHandleDataClick = (name, commentText) => {\n        setName(name)\n        setTextComment(commentText)\n     }\n\n    const postHandleDataClick = async () => {\n        const response = await createComments(name, textComment)\n        console.log(response)\n    }\n\n    useEffect(() => {\n        getComments().then(data => comment.setComments(data))\n    }, [name, textComment, comment])\n\n    return <div className={classes.root}>\n        {comment.comments.length !== 0 && comment.comments.map((item, index) => {\n           return <div key={index} className={classes.comment}>\n               <Typography className={classes.name} >{item.name}</Typography>\n               <Typography className={classes.text} >{item.text}</Typography>\n               </div>\n        })}\n        <CommentsInputForm onSubmit={getHandleDataClick} onClick={postHandleDataClick}/>\n    </div>\n})\n\nexport default CommentsPage"]},"metadata":{},"sourceType":"module"}