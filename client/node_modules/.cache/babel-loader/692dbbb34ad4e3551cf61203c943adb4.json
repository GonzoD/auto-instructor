{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/fullstack-auto/client/src/components/Contacts/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport ColorButton from '../ColorButton';\nimport useCopyToClipboard from '../../utils/useCopyToClipboard';\nimport { number } from '../../utils/constants';\nimport { useMediaQuery } from 'react-responsive';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: '3% 0',\n    background: '#1b2957',\n    color: 'white'\n  },\n  header: {\n    marginBottom: '30px',\n    fontSize: '22px'\n  },\n  contacts: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    width: '50%'\n  },\n  contactBox: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  button: {\n    background: '#30D171'\n  },\n  buttonBigScreen: {\n    fontSize: '20px',\n    height: '50px'\n  },\n  buttonMobile: {\n    fontSize: '10px',\n    height: '20px',\n    display: 'flex',\n    alignSelf: 'flex-start'\n  },\n  mailButton: {\n    color: '#30D171',\n    textTransform: 'none'\n  },\n  mailButtonBigScreen: {\n    fontSize: '20px',\n    height: '50px'\n  },\n  mailButtonMobile: {\n    fontSize: '12px',\n    height: '20px'\n  },\n  textBigScreen: {\n    fontSize: '20px'\n  },\n  textMobile: {\n    fontSize: '13px'\n  }\n}));\n\nconst Contacts = () => {\n  _s();\n\n  const classes = useStyles();\n  const [handleCopy] = useCopyToClipboard();\n  const mail = 'ivanov@gmail.com';\n  const isTabletOrMobile = useMediaQuery({\n    query: '(max-width: 1224px)'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"contacts\",\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.header,\n      children: \"\\u041A\\u043E\\u043D\\u0442\\u0430\\u043A\\u0442\\u044B \\u0430\\u0432\\u0442\\u043E\\u0438\\u043D\\u0441\\u0442\\u0440\\u0443\\u043A\\u0442\\u043E\\u0440\\u0430\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contacts,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contactBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: `${isTabletOrMobile ? classes.textMobile : classes.textBigScreen}`,\n          children: \"\\u0421\\u0432\\u044F\\u0436\\u0438\\u0442\\u0435\\u0441\\u044C \\u0441\\u043E \\u043C\\u043D\\u043E\\u0439 \\u043F\\u043E \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ColorButton, {\n          text: number,\n          style: `${classes.button} ${isTabletOrMobile ? classes.buttonMobile : classes.buttonBigScreen}`,\n          onClick: () => handleCopy(number)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.contactBox,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: `${isTabletOrMobile ? classes.textMobile : classes.textBigScreen}`,\n          children: \"\\u041C\\u043E\\u044F \\u043F\\u043E\\u0447\\u0442\\u0430\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: `${classes.mailButton} ${isTabletOrMobile ? classes.mailButtonMobile : classes.mailButtonBigScreen}`,\n          onClick: () => handleCopy(mail),\n          children: mail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Contacts, \"178RJujAg3zF4uTc2DER6xSlfpY=\", false, function () {\n  return [useStyles, useCopyToClipboard, useMediaQuery];\n});\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/home/ihor/Рабочий стол/fullstack-auto/client/src/components/Contacts/index.jsx"],"names":["React","makeStyles","Typography","Button","ColorButton","useCopyToClipboard","number","useMediaQuery","useStyles","root","display","flexDirection","alignItems","padding","background","color","header","marginBottom","fontSize","contacts","justifyContent","width","contactBox","button","buttonBigScreen","height","buttonMobile","alignSelf","mailButton","textTransform","mailButtonBigScreen","mailButtonMobile","textBigScreen","textMobile","Contacts","classes","handleCopy","mail","isTabletOrMobile","query"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Button } from '@material-ui/core';\nimport ColorButton from '../ColorButton';\nimport useCopyToClipboard from '../../utils/useCopyToClipboard'\nimport { number } from '../../utils/constants'\nimport { useMediaQuery } from 'react-responsive'\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: '3% 0',\n        background: '#1b2957',\n        color: 'white'\n    },\n    header: {\n        marginBottom: '30px',\n        fontSize: '22px'     \n    },\n    contacts: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '50%',\n    },\n    contactBox: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    button: {\n        background: '#30D171'\n    },\n    buttonBigScreen:{fontSize: '20px', height: '50px',},\n    buttonMobile:{fontSize: '10px', height: '20px',\n    display: 'flex', \n    alignSelf: 'flex-start'},\n    mailButton: {\n        color: '#30D171',\n        textTransform: 'none'\n    },\n    mailButtonBigScreen:{fontSize: '20px', height: '50px',},\n    mailButtonMobile:{fontSize: '12px', height: '20px',},\n    textBigScreen:{fontSize: '20px'},\n    textMobile:{fontSize: '13px'},\n}));\n\nconst Contacts = () => {\n    const classes = useStyles()\n    const [handleCopy] = useCopyToClipboard();\n    const mail = 'ivanov@gmail.com'\n    const isTabletOrMobile = useMediaQuery({ query: '(max-width: 1224px)' })\n\n    return <div id='contacts' className={classes.root}>\n        <Typography className={classes.header}>Контакты автоинструктора</Typography>\n        <div className={classes.contacts}>\n        <div className={classes.contactBox}>\n            <Typography className={`${isTabletOrMobile ? classes.textMobile : classes.textBigScreen}`}>Свяжитесь со мной по номеру</Typography>\n            <ColorButton text={number} style={`${classes.button} ${isTabletOrMobile ? classes.buttonMobile : classes.buttonBigScreen}`} onClick={() => handleCopy(number)}/>\n        </div>\n        <div className={classes.contactBox}>\n            <Typography className={`${isTabletOrMobile ? classes.textMobile : classes.textBigScreen}`}>Моя почта</Typography>\n            <Button className={`${classes.mailButton} ${isTabletOrMobile ? classes.mailButtonMobile : classes.mailButtonBigScreen}`} onClick={() => handleCopy(mail)}>{mail}</Button>\n        </div>\n        </div>\n    </div>\n}\n\nexport default Contacts"]},"metadata":{},"sourceType":"module"}