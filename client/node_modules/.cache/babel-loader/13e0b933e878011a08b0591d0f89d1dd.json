{"ast":null,"code":"var _jsxFileName = \"/home/ihor/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/fullstack-auto/client/src/pages/CommentsPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentsInputForm from '../components/CommentsInputForm';\nimport { observer } from 'mobx-react-lite';\nimport { Context } from '../index.js';\nimport { getComments, createComments } from '../http/httpHooks';\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '2%'\n  },\n  comment: {\n    background: '#1C2128',\n    color: 'white',\n    width: '1000px',\n    minHeight: '150px',\n    maxHeight: '400px',\n    margin: '0.5% 0',\n    borderRadius: '10px',\n    padding: '10px 10px'\n  },\n  name: {\n    color: '#30D171',\n    textTransform: 'uppercase',\n    fontWeight: 800\n  },\n  text: {}\n}));\nconst CommentsPage = observer(_c = _s(() => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    comment\n  } = useContext(Context);\n  const [name, setName] = useState('');\n  const [textComment, setTextComment] = useState('');\n\n  const getHandleDataClick = (name, commentText) => {\n    setName(name);\n    setTextComment(commentText);\n  };\n\n  const postHandleDataClick = async () => {\n    const response = await createComments(name, textComment);\n    console.log(response);\n  };\n\n  useEffect(() => {\n    getComments().then(data => comment.setComments(data));\n  }, [name, textComment, comment]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      class: true,\n      children: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0438 \\u0443\\u0447\\u0435\\u043D\\u0438\\u043A\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), comment.comments.length !== 0 && comment.comments.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.name,\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.text,\n          children: item.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 19\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(CommentsInputForm, {\n      onSubmit: getHandleDataClick,\n      onClick: postHandleDataClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}, \"iMphQZSwtT6tM+ASJBY/qD4W6Ko=\", false, function () {\n  return [useStyles];\n}));\n_c2 = CommentsPage;\nexport default CommentsPage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CommentsPage$observer\");\n$RefreshReg$(_c2, \"CommentsPage\");","map":{"version":3,"sources":["/home/ihor/Рабочий стол/fullstack-auto/client/src/pages/CommentsPage.jsx"],"names":["React","useContext","useEffect","useState","makeStyles","CommentsInputForm","observer","Context","getComments","createComments","Typography","useStyles","theme","root","display","flexDirection","alignItems","marginTop","comment","background","color","width","minHeight","maxHeight","margin","borderRadius","padding","name","textTransform","fontWeight","text","CommentsPage","classes","setName","textComment","setTextComment","getHandleDataClick","commentText","postHandleDataClick","response","console","log","then","data","setComments","comments","length","map","item","index"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CommentsInputForm from '../components/CommentsInputForm';\nimport {observer} from 'mobx-react-lite'\nimport {Context} from '../index.js'\nimport {getComments, createComments} from '../http/httpHooks'\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginTop: '2%'\n    },\n    comment: {\n        background: '#1C2128',\n        color: 'white', \n        width: '1000px',\n        minHeight: '150px',\n        maxHeight: '400px',\n        margin: '0.5% 0',\n        borderRadius: '10px',\n        padding: '10px 10px'\n    },\n    name: {\n        color: '#30D171',\n        textTransform: 'uppercase',\n        fontWeight: 800\n    },\n    text: {\n\n    },\n}))\n\nconst CommentsPage = observer(() => {\n    const classes = useStyles()\n    const {comment} = useContext(Context)\n    const [name, setName] = useState('')\n    const [textComment, setTextComment] = useState('')\n\n    const getHandleDataClick = (name, commentText) => {\n        setName(name)\n        setTextComment(commentText)\n     }\n\n    const postHandleDataClick = async () => {\n        const response = await createComments(name, textComment)\n        console.log(response)\n    }\n\n    useEffect(() => {\n        getComments().then(data => comment.setComments(data))\n    }, [name, textComment, comment])\n\n    return <div className={classes.root}>\n        <Typography class>Комментарии учеников</Typography>\n        {comment.comments.length !== 0 && comment.comments.map((item, index) => {\n           return <div key={index} className={classes.comment}>\n               <Typography className={classes.name} >{item.name}</Typography>\n               <Typography className={classes.text} >{item.text}</Typography>\n               </div>\n        })}\n        <CommentsInputForm onSubmit={getHandleDataClick} onClick={postHandleDataClick}/>\n    </div>\n})\n\nexport default CommentsPage"]},"metadata":{},"sourceType":"module"}